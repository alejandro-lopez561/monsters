{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","lastname","alt","firstname","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","data","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAaeA,EAVF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,SAAxC,iBAAiEC,IAAI,YAC7E,6BAAKL,EAAMG,QAAQG,YACnB,4BAAIN,EAAMG,QAAQI,YCSfC,EAbE,SAACR,GAEd,OACI,qBAAKC,UAAU,YAAf,SAGID,EAAMS,SAASC,KAAI,SAACP,GACjB,OAAO,cAAC,EAAD,CAA6BA,QAASA,GAA3BA,EAAQC,gBCA1BO,G,MARG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKZ,UAAU,IAAf,SACI,uBAAOA,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,QCmCzEG,E,kDAnCb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJE,E,qDAUnB,WAAqB,IAAD,OAClBC,MAAM,oDACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEf,SAAUc,EAAKA,Y,oBAG/C,WAAU,IAAD,SAOyBE,KAAKR,MAA9BR,EAPA,EAOAA,SAAUS,EAPV,EAOUA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAAxB,GAAO,OAAIA,EAAQG,UAAUsB,cAAcC,SAASX,EAAYU,kBAEzG,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAVvB,SAACiB,GACpB,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAUpC,cAAC,EAAD,CAAUvB,SAAUiB,W,GA/BVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4e379ca1.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nconst Card = (props) => {\n    return (\n        <div className=\"card-container\">\n            <img src={`https://robohash.org/${props.monster.lastname}?size=180x180`} alt=\"monster\"></img>\n            <h2>{props.monster.firstname}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport './card-list.styles.css'\nimport Card from '../card/card.component'\n\nconst CardList = (props) => {\n    let id;\n    return (\n        <div className=\"card-list\">\n            \n            {\n            props.monsters.map((monster) => {\n               return <Card key={monster.lastname} monster={monster} />})\n            }\n        </div>\n    )\n}\n\nexport default CardList\n","import React from 'react'\nimport './search-box.styles.css'\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n    return (\n        <div className=\"s\">\n            <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange}></input>\n        </div>\n    )\n}\n\nexport default SearchBox\n","import React, {Component} from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    \n  }\n\n  \n  componentDidMount() {\n    fetch('https://fakerapi.it/api/v1/persons?_locale=fr_FR')\n    .then(response => response.json())\n    .then(data => this.setState({ monsters: data.data }));\n  }\n  \n  render() {\n    \n    \n    const handleChange = (e) => {\n      this.setState({ searchField: e.target.value})\n    }\n\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.firstname.toLowerCase().includes(searchField.toLowerCase()));\n    \n    return (\n      <div className=\"App\">\n        <h1>MonsterS RolodeX</h1>\n        <SearchBox placeholder=\"search monster\" handleChange={handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}